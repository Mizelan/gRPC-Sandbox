// Code generated by protoc-gen-db. DO NOT EDIT.

package v1

import (
	"context"
	"database/sql"
	"strings"
)

func (m *User) CreateTableSQL() string {
	var statements []string
	statements = append(statements, `CREATE TABLE IF NOT EXISTS user (`)
	statements = append(statements, `    user_id VARCHAR(36) PRIMARY KEY,
    email_address VARCHAR(255),
    user_age INTEGER`)
	statements = append(statements, `)`)
	statements = append(statements, `CREATE INDEX IF NOT EXISTS idx_user_email_address ON user(email_address)`)
	return strings.Join(statements, ";")
}

func (m *User) Insert(ctx context.Context, db *sql.DB) error {
	query := `INSERT INTO user (
        user_id, email_address, user_age
    ) VALUES ($1, $2, $3)`

	_, err := db.ExecContext(ctx, query, m.Id, m.Email, m.Age)
	return err
}

func (m *User) Update(ctx context.Context, db *sql.DB) error {
	query := `UPDATE user SET
        email_address = $2,
        user_age = $3
    WHERE user_id = $3`

	_, err := db.ExecContext(ctx, query, m.Email, m.Age, m.Id)
	return err
}

func (m *User) Delete(ctx context.Context, db *sql.DB) error {
	query := `DELETE FROM user WHERE user_id = $1`
	_, err := db.ExecContext(ctx, query, m.Id)
	return err
}

func GetUserByPK(ctx context.Context, db *sql.DB, pk any) (*User, error) {
	m := &User{}
	query := `SELECT
        user_id,
        email_address,
        user_age
    FROM user
    WHERE user_id = $1`

	err := db.QueryRowContext(ctx, query, pk).Scan(&m.Id, &m.Email, &m.Age)
	if err != nil {
		return nil, err
	}
	return m, nil
}

func ListUsers(ctx context.Context, db *sql.DB, limit, offset int) ([]*User, error) {
	query := `SELECT
        user_id,
        email_address,
        user_age
    FROM user
    LIMIT $1 OFFSET $2`

	rows, err := db.QueryContext(ctx, query, limit, offset)
	if err != nil {
		return nil, err
	}
	defer rows.Close()

	var results []*User
	for rows.Next() {
		m := &User{}
		if err := rows.Scan(&m.Id, &m.Email, &m.Age); err != nil {
			return nil, err
		}
		results = append(results, m)
	}
	return results, rows.Err()
}
